/**
 * Copyright 2024-present Coinbase Global, Inc.
 *
 * This file is generated by Openapi Generator https://github.com/openapitools/openapi-generator
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *  Do not edit the class manually.
 */

import { FcmTradingSessionDetails } from './FcmTradingSessionDetails';
import { FutureProductDetails } from './FutureProductDetails';
import { ProductType } from './enums/ProductType';
import { ProductVenue } from './enums/ProductVenue';

export type Product = {
  /**
   * The trading pair (e.g. \'BTC-USD\').
   */
  productId: string;
  /**
   * The current price for the product, in quote currency.
   */
  price: string;
  /**
   * The amount the price of the product has changed, in percent, in the last 24 hours.
   */
  pricePercentageChange24h: string;
  /**
   * The trading volume for the product in the last 24 hours.
   */
  volume24h: string;
  /**
   * The amount the volume of the product has changed, in percent, in the last 24 hours.
   */
  volumePercentageChange24h: string;
  /**
   * Minimum amount base value can be increased or decreased at once.
   */
  baseIncrement: string;
  /**
   * Minimum amount quote value can be increased or decreased at once.
   */
  quoteIncrement: string;
  /**
   * Minimum size that can be represented of quote currency.
   */
  quoteMinSize: string;
  /**
   * Maximum size that can be represented of quote currency.
   */
  quoteMaxSize: string;
  /**
   * Minimum size that can be represented of base currency.
   */
  baseMinSize: string;
  /**
   * Maximum size that can be represented of base currency.
   */
  baseMaxSize: string;
  /**
   * Name of the base currency.
   */
  baseName: string;
  /**
   * Name of the quote currency.
   */
  quoteName: string;
  /**
   * Whether or not the product is on the user\'s watchlist.
   */
  watched: boolean;
  /**
   * Whether or not the product is disabled for trading.
   */
  isDisabled: boolean;
  /**
   * Whether or not the product is \'new\'.
   */
  _new: boolean;
  /**
   * Status of the product.
   */
  status: string;
  /**
   * Whether or not orders of the product can only be cancelled, not placed or edited.
   */
  cancelOnly: boolean;
  /**
   * Whether or not orders of the product can only be limit orders, not market orders.
   */
  limitOnly: boolean;
  /**
   * Whether or not orders of the product can only be posted, not cancelled.
   */
  postOnly: boolean;
  /**
   * Whether or not the product is disabled for trading for all market participants.
   */
  tradingDisabled: boolean;
  /**
   * Whether or not the product is in auction mode.
   */
  auctionMode: boolean;
  /**
   * Type of the product.
   */
  productType?: ProductType;
  /**
   * Symbol of the quote currency.
   */
  quoteCurrencyId?: string;
  /**
   * Symbol of the base currency.
   */
  baseCurrencyId?: string;
  fcmTradingSessionDetails?: FcmTradingSessionDetails;
  /**
   * The current midpoint of the bid-ask spread, in quote currency.
   */
  midMarketPrice?: string;
  /**
   * Product id for the corresponding unified book.
   */
  alias?: string;
  /**
   * Product ids that this product serves as an alias for.
   */
  aliasTo?: Array<string>;
  /**
   * Symbol of the base display currency.
   */
  baseDisplaySymbol: string;
  /**
   * Symbol of the quote display currency.
   */
  quoteDisplaySymbol: string;
  /**
   * Reflects whether an FCM product has expired. For SPOT, set get_tradability_status to get a return value here. Defaulted to false for all other product types.
   */
  viewOnly?: boolean;
  /**
   * Minimum amount price can be increased or decreased at once.
   */
  priceIncrement?: string;
  /**
   * Display name for the product e.g. BTC-PERP-INTX => BTC PERP
   */
  displayName?: string;
  /**
   * The sole venue id for the product. Defaults to CBE if the product is not specific to a single venue
   */
  productVenue?: ProductVenue;
  /**
   * The approximate trading volume for the product in the last 24 hours based on the current quote.
   */
  approximateQuote24hVolume?: string;
  /**
   * The timestamp when the product was listed. This is only populated if product has new tag.
   */
  newAt?: string;
  futureProductDetails?: FutureProductDetails;
};
