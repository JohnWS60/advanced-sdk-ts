/**
 * Copyright 2024-present Coinbase Global, Inc.
 *
 * This file is generated by Openapi Generator https://github.com/openapitools/openapi-generato
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *  Do not edit the class manually.
 */

import { Edit } from './Edit';
import { MarginType } from './enums/MarginType';
import { OrderConfiguration } from './OrderConfiguration';
import { OrderExecutionStatus } from './enums/OrderExecutionStatus';
import { OrderPlacementSource } from './enums/OrderPlacementSource';
import { OrderSide } from './enums/OrderSide';
import { OrderType } from './enums/OrderType';
import { ProductType } from './enums/ProductType';
import { RejectReason } from './enums/RejectReason';
import { StopTriggerStatus } from './enums/StopTriggerStatus';
import { TimeInForceType } from './enums/TimeInForceType';

export type Order = {
  /**
   * The ID of the order.
   */
  orderId: string;
  /**
   * The trading pair (e.g. \'BTC-USD\').
   */
  productId: string;
  /**
   * The id of the User owning this Order
   */
  userId: string;
  /**
   * The configuration of the order (e.g. the order type, size, etc).
   */
  orderConfiguration: OrderConfiguration;
  /**
   * The side of the market that the order is on (e.g. \'BUY\', \'SELL\').
   */
  side: OrderSide;
  /**
   * The unique ID provided for the order (used for identification purposes).
   */
  clientOrderId: string;
  /**
   * The current state of the order
   */
  status: OrderExecutionStatus;
  /**
   * The client specified window for which the order can remain active
   */
  timeInForce?: TimeInForceType;
  /**
   * Timestamp for when the order was created
   */
  createdTime: string;
  /**
   * The percent of total order amount that has been filled
   */
  completionPercentage: string;
  /**
   * The portion (in base currency) of total order amount that has been filled
   */
  filledSize?: string;
  /**
   * The average of all prices of fills for this order
   */
  averageFilledPrice: string;
  /**
   * **(Deprecated)**  Commission amount
   */
  fee?: string;
  /**
   * Number of fills that have been posted for this order
   */
  numberOfFills: string;
  /**
   * The portion (in quote current) of total order amount that has been filled
   */
  filledValue?: string;
  /**
   * Whether a cancel request has been initiated for the order, and not yet completed
   */
  pendingCancel: boolean;
  /**
   * Whether the order was placed with quote currency
   */
  sizeInQuote: boolean;
  /**
   * The total fees for the order
   */
  totalFees: string;
  /**
   * Whether the order size includes fees
   */
  sizeInclusiveOfFees: boolean;
  /**
   * derived field: filled_value + total_fees for buy orders and filled_value - total_fees for sell orders.
   */
  totalValueAfterFees: string;
  /**
   * The trigger status of the order, with respect to stop price.
   */
  triggerStatus?: StopTriggerStatus;
  /**
   * Type of the order
   */
  orderType?: OrderType;
  /**
   * Reason the order was rejected.
   */
  rejectReason?: RejectReason;
  /**
   * True if the order is fully filled, false otherwise.
   */
  settled?: boolean;
  /**
   * The type of order, i.e. Spot or Future
   */
  productType?: ProductType;
  /**
   * Message stating why the order was rejected.
   */
  rejectMessage?: string;
  /**
   * Message stating why the order was canceled.
   */
  cancelMessage?: string;
  /**
   * Message stating which source an order was placed from.
   */
  orderPlacementSource?: OrderPlacementSource;
  /**
   * The remaining hold amount (holdAmount - holdAmountReleased). [value is 0 if holdReleased is true]
   */
  outstandingHoldAmount?: string;
  /**
   * True if order is of liquidation type.
   */
  isLiquidation?: boolean;
  /**
   * Time of the most recent fill for this order
   */
  lastFillTime?: string;
  /**
   * An array of the latest 5 edits per order
   */
  editHistory?: Array<Edit>;
  /**
   * The amount of leverage for the order (default is 1.0).
   */
  leverage?: string;
  /**
   * Margin Type for this order (default is CROSS).
   */
  marginType?: MarginType;
  /**
   * The ID of the portfolio this order is associated with.
   */
  retailPortfolioId?: string;
};
